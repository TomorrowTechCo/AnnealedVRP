analysis of the project

pseudo code
mainFunction :: [Truck] -> [Client] -> Time -> Solution -> Solution
mainFunction trucks clients !t !sol = if (t <= tmin)
  then sol
  else (mainFunction trucks clients (changeTemp t tmin) (
    if (tPF (totalCost (swapClient sol)) (totalCost sol) t) > (rand 0 1)
    then (swapClient sol)
    else sol
  ))

[
  [a, b, c, d]
  [e, f]
  [g, h, i, j, k]
]

total cost:
sede->a + a->b + b->c + c->d + d->sede
+
sede->e + e->f + f->sede
+
sede->g + g->h + h->i + i->j + j->k + k->sede

exchange b with i:

sede->a + a->i + i->c + c->d + d->sede
+
sede->e + e->f + f->sede
+
sede->g + g->h + h->b + b->j + j->k + k->sede

cambio en costos:
-ab -bc +ai +ic
-hi -ij +hb +bj

obtener los vecinos de las posiciones, restar el costo desde y hacia
el cliente actual, aÃ±adir el costo desde y hacia el nuevo cliente.

send b to second truck, second position:

sede->a + a->c + c->d + d->sede
+
sede->e + e->b + b->f + f->sede
+
sede->g + g->h + h->i + i->j + j->k + k->sede

cambio en costos:
-ab -bc +ac
-ef +eb +bf


randomR monad

randomR (a,b) StdGen = (Int, StdGen)
do
runRand (0, length list)
runRand (0, length list)

MatrixM container type

MatrixM a = MatrixM mtx a []
